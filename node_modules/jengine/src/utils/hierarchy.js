var Hierarchy = JEngine.Utils.Hierarchy = {
  add: function() {
    var self = this;
    self.children || (self.children = []);
    var children = _.flatten(slice.call(arguments));
    children.forEach(function(child) {
      if (!_.include(children, child)) {
        self.children.push(child);
        child.parent = self;
        child.trigger && child.trigger('added');
      }
    });
    self.trigger && self.trigger('addedChild');
    return this;
  },

  remove: function() {
    var self = this;
    self.children || (self.children = []);
    var children = _.flatten(slice.call(arguments));
    children.forEach(function(child) {
      if (!_.include(children, child)) {
        self.children = _.without(self.children, child);
        child.parent = undefined;
        child.trigger && child.trigger('removed');
      }
    });
    self.trigger && self.trigger('removeChild');
    return this;
  },

  removeSelf: function() {
    var self = this;
    if (self.parent && typeof self.parent.remove === 'function') {
      self.parent.remove(self);
    }
    self.parent = undefined;
    return this;
  },

  addTo: function(parent) {
    var self = this;
    if (parent && typeof parent.add === 'function') {
      parent.add(self);
    }
    return this;
  }
};