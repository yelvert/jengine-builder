JEngine.GameObjects = JEngine.Utils.Obj.extend({
  constructor: function GameObjects() {
    if (arguments.length == 1 && _.isArray(arguments[0])) {
      this.collection = arguments[0];
    } else {
      this.collection = _.toArray(arguments);
    }
  },

  add: function(go) {
    if (!this.contains(go)) {
      this.collection.push(go);
    }
    return this;
  },

  remove: function(go) {
    this.collection = this.collection.without(go);
    return this;
  }
});

_.each('each map reduce reduceRight find filter where findWhere reject every some contains invoke pluck max min sortBy groupBy indexBy countBy shuffle sample toArray size first initial last rest compact flatten without union intesection difference uniq zip object indexOf lastIndexOf sortedIndex range'.split(' '), function(method) {
  JEngine.GameObjects.prototype[method] = function() {
    var args = slice.call(arguments);
    args.unshift(this.collection);
    return _[method].apply(_, args);
  }
});