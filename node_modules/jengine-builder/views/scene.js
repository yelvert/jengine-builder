module.exports = Backbone.View.extend({
  el: '#scene',

  template: requireTemplate('./scene'),

  initialize: function() {
    _.bindAll(this, 'render');
    this.$el.data({view: this});
    this.babylon = {};
  },

  render: function() {
    this.$el.html(this.template());
    this.renderScene();
    return this;
  },

  renderScene: function() {
    var self = this;
    self.babylon.canvas = self.$('canvas').get(0);
    self.babylon.engine = new BABYLON.Engine(self.babylon.canvas, true);
    
    self.babylon.scene = new BABYLON.Scene(self.babylon.engine);
    // Creating a camera looking to the zero point (0,0,0), a light, and a sphere of size 1
    self.babylon.camera = new BABYLON.ArcRotateCamera("Camera", 1, 0.8, 10, new BABYLON.Vector3(0, 0, 0), self.babylon.scene);
    self.babylon.light0 = new BABYLON.PointLight("Omni", new BABYLON.Vector3(0, 0, 10), self.babylon.scene);
    self.babylon.origin = BABYLON.Mesh.CreateSphere("origin", 10, 1.0, self.babylon.scene);

    // Attach the camera to the scene
    self.babylon.scene.activeCamera.attachControl(self.babylon.canvas);
    
    // Once the scene is loaded, just register a render loop to render it
    self.babylon.engine.runRenderLoop(function () {
      self.babylon.scene.render();
    });
    return self;
  }
})