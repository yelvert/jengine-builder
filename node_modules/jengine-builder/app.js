var path = require('path');
var JEngineBuilder = module.exports = function (options) {
  var self = this;
  Backbone.history.start({root: document.location.toString()});
  _.each(this.constructor.Routers, function (router, name) {
    self.Routers[name] = new router;
  });
};

_.extend(JEngineBuilder, {
  Routers: browserRequire('./routers'),
  
  Views: browserRequire('./views'),

  Project: browserRequire('./classes/project'),

  BlankScene: browserRequire('./classes/blank_scene'),

  rootPath: path.join(process.cwd(), 'node_modules', 'jengine-builder')
});

_.extend(JEngineBuilder.prototype, {
  setActiveView: function (view) {
    if (this.ActiveView) {
      this.ActiveView.undelegateEvents();
      this.ActiveView.stopListening();
      this.ActiveView.removeAttr('data-page');
    }
    this.activeView = view;
    this.activeView.$el.attr({'data-page': view.name});
    return this.activeView;
  },

  setActiveProject: function (project) {
    this.Project = project;
    localStorage.set('project', project.root);
    if (!localStorage.get('recentProjects').hasOwnProperty(project.name)) {
      localStorage.get('recentProjects')[project.name] = project.root;
    }
  },
  
  Routers: {},

  start: function () {
    localStorage.get('recentProjects') || localStorage.set('recentProjects', {});
    Backbone.history.loadUrl();
    return this;
  }
});