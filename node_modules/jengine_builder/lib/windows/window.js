var U = require('../utils.js'),
    options = require('../options.js')
;

var Window = U.object.extend({
  optionsObject: options.Window,

  open: function() {
    var self = this;
    self.window = self.appjs.createWindow(self.application.urlFor(self.options.get('url')), self.options.getSet('window'));
    self.window.on('create', function() {
      self.trigger('windowCreated');
    });
    self.window.on('ready', function() {
      self.trigger('windowReady');
    });
    self.trigger('open');
    return self;
  },

  close: function() {
    var self = this;
    debugger
    self.window.windowClose();
    self.trigger('close');
    return self;
  },

  createMenu: function() {
    var self = this;
    self._menu = self.appjs.createMenu([
      {
        label:'&File',
        submenu:[
          {
            label:'E&xit',
            action: function(){
              self.window.close();
            }
          },
          {
            label: 'Dev Tools',
            action: function() {
              self.window.frame.openDevTools();
            }
          }
        ]
      },
      {
        label:'&Window',
        submenu:[
          {
            label:'Fullscreen',
            action:function(item) {
              self.window.frame.fullscreen();
            }
          },
          {
            label:'Minimize',
            action:function(){
              self.window.frame.minimize();
            }
          },
          {
            label:'Maximize',
            action:function(){
              self.window.frame.maximize();
            }
          },
          {
            label:''//separator
          },
          {
            label:'Restore',
            action:function(){
              self.window.frame.restore();
            }
          }
        ]
      }
    ]);
    return self._menu;
  },

  setOnWindow: function(name, obj) {
    this.window[name] = obj;
    return this;
  }
});

Window.on('initialize', function() {
  this.application = this.getOption('application');
  this.appjs = this.application.appjs;
});

Window.on('windowCreated', function() {
  var self = this;
  if (self.getOption('openImmediately')) {
    self.window.frame.show();
  }
  if (self.getOption('center')) {
    self.window.frame.center();
  }
  if (self.getOption('showMenu')) {
    self.window.frame.setMenuBar(self.createMenu());
  }
});

Window.on('windowReady', function() {
  this.window.$ = require('jquery');
  this.window._ = require('underscore');
  this.$ = this.window.$;
});

module.exports = Window;