var fs = require('fs'),
  path = require('path'),
  logger = require('logger');

var browserRequire = module.exports = function (name) {
  var parent = arguments.callee && arguments.callee.caller && arguments.callee.caller.module;
  var modulePath = browserRequire.resolve(name, parent);
  if (modulePath) {
    var file = fs.readFileSync(modulePath);
    var funcString = 'with (window) {' + file + '}';
    var func = new Function("window", "exports", "module", "__filename", "__dirname", funcString);
    var dirname = path.dirname(modulePath);
    func.module = {
      filename: modulePath,
      dirname: dirname
    };
    if (parent) {
      func.module.parent = parent;
    }
    var _module = {
      exports: {}
    };
    var retVal = func.apply(this, [this, _module.exports, _module, modulePath, dirname]);
    if (_module.exports) {
      return _module.exports;
    } else {
      return (retVal || {});
    }
  } else {
    throw new Error('Cannot find module ' + name + '!');
  }
};

browserRequire.resolve = function (name, parent) {
  var start = name.substring(0, 2);
  if (start == './' || start == '../') {
    name = path.join(parent ? parent.dirname : process.cwd(), name);
  }
  return require.resolve(name);
}